// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.projects.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Embedding configuration class.
 */
@Immutable
public final class EmbeddingConfiguration implements JsonSerializable<EmbeddingConfiguration> {

    /*
     * Deployment name of embedding model. It can point to a model deployment either in the parent AIServices or a
     * connection.
     */
    @Generated
    private final String modelDeploymentName;

    /*
     * Embedding field
     */
    @Generated
    private final String embeddingField;

    /**
     * Creates an instance of EmbeddingConfiguration class.
     *
     * @param modelDeploymentName the modelDeploymentName value to set.
     * @param embeddingField the embeddingField value to set.
     */
    @Generated
    public EmbeddingConfiguration(String modelDeploymentName, String embeddingField) {
        this.modelDeploymentName = modelDeploymentName;
        this.embeddingField = embeddingField;
    }

    /**
     * Get the modelDeploymentName property: Deployment name of embedding model. It can point to a model deployment
     * either in the parent AIServices or a connection.
     *
     * @return the modelDeploymentName value.
     */
    @Generated
    public String getModelDeploymentName() {
        return this.modelDeploymentName;
    }

    /**
     * Get the embeddingField property: Embedding field.
     *
     * @return the embeddingField value.
     */
    @Generated
    public String getEmbeddingField() {
        return this.embeddingField;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("modelDeploymentName", this.modelDeploymentName);
        jsonWriter.writeStringField("embeddingField", this.embeddingField);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of EmbeddingConfiguration from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of EmbeddingConfiguration if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the EmbeddingConfiguration.
     */
    @Generated
    public static EmbeddingConfiguration fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String modelDeploymentName = null;
            String embeddingField = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("modelDeploymentName".equals(fieldName)) {
                    modelDeploymentName = reader.getString();
                } else if ("embeddingField".equals(fieldName)) {
                    embeddingField = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new EmbeddingConfiguration(modelDeploymentName, embeddingField);
        });
    }
}
